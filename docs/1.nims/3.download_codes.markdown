---
layout: default
title: 3. Download codes
parent: NIMS 👩‍💻 
nav_order: 3
---

<details open markdown="block">
  <summary>
    Table of contents
  </summary>
  {: .text-delta }
- TOC
{:toc}
</details>

---
## download codes from ObservableHQ (예시)
### download 
{: .fs-3 }

observableHQ에서 Export를 통해 코드를 다운
{: .fs-3 }

예를 들어. observableHQ에서 작성한 파일이 아래와 같고 Export를 통해 코드를 다운받는다면,
{: .fs-3 }

```javascript
//javascript
viewof amount = Inputs.range([0, 200], {label: "Amount", step: 1})
```
```javascript
//javascript
viewof tipPercent = Inputs.radio([10, 12, 15, 18, 20, 25],
                                 {label: "Tip Percentage", value: 20})
```
```javascript
//javascript
tip = amount * (tipPercent / 100)
```
```markdown
#markdown
A **${tipPercent}%** tip on **$${amount.toFixed(2)}** is **$${tip.toFixed(2)}**,    
for a total of **$${(amount+tip).toFixed(2)}**
```
<br>
### visual studio
{: .fs-3 }

다운로드 받은 코드의 구조는, 아래와 같다.
{: .fs-3 }

```
7d2f01ccb9e8dd3e
    ├─ 7d2f01ccb9e8dd3e@14.js
    ├─ README.md
    ├─ index.html
    ├─ index.js
    ├─ inspector.css
    ├─ package.json
    └─ runtime.js
```
<br>
visual studio에서 압축해제한 파일 전체를 열고 live server를 실행하면,
불필요하다고 생각되는 출력 결과가 함께 보여진다.    
예를 들면,
{: .fs-3 }

![web_application2.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application2.png?raw=true)

```
range 바 아래에, amount = 100
radio button 아래에, tipPercent = 20
```

index.html를 수정하면, 불필요한 출력 결과를 삭제할 수 있다.
{: .fs-3 } 

![web_application1.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application1.png?raw=true)

```
# as-is   
const runtime = new Runtime();
const main = runtime.module(define, Inspector.into(document.body));

# be-to
## <body>위에 추가
<section>
  <div id="amount"></div>
  <div id="tipPercent"></div>
  <div id="tip"></div>
</section>

## main을 아래 코드로 수정
const main = runtime.module(define, (name) => {
    if (name === "viewof amount") {
        return new Inspector(document.getElementById("amount"));
    } else if (name === "viewof tipPercent") {
        return new Inspector(document.getElementById("tipPercent"));
    } else if (name === "viewof tip") {
        return new Inspector(document.getElementById("tip"));
    }
});
```
하지만, 위 코드는 두 가지 문제점을 가지고 있다.   
{: .fs-3 } 

첫번째 문제, tip에 대한 부분은 나타나지 않는다.   
그 이유는, js에서 확인할 수 있다.   
{: .fs-3 } 
```javascript
//아래의 코드는 'tip'
main.variable(observer("tip")).define("tip", ["amount","tipPercent"], _tip);

//아래의 코드는 'tipPercent'
//radio button
main.variable(observer("viewof tipPercent")).define("viewof tipPercent", ["Inputs"], _tipPercent);
//radio button 아래의 tipPercent = 20
main.variable(observer("tipPercent")).define("tipPercent", ["Generators", "viewof tipPercent"], (G, _) => G.input(_));
```
화면에 출력하고싶다면, viewof를 사용해야한다.   
{: .fs-3 } 
```javascript
main
    .variable(observer("viewof tip"))
    .define("tip", ["amount", "tipPercent"], _tip);
```
![web_application3.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application3.png?raw=true)

두번째 문제, observableHQ에서 markdown으로 작성한 부분이 출력되지 않는다.  
왜? index.html에 관련된 부분을 작성하지 않았기 때문이다.   
function에 이름이 없었기 때문에 작성할 수 없었다.  
html, js에 아래의 코드를 수정 또는 추가한다.   
{: .fs-3 } 

html   
{: .fs-3 } 

```html
<!-- html의 section-->
  <div id="markdown"></div>
```
```html
<!-- html의 define -->
else if (name === "viewof markdown") {
    return new Inspector(document.getElementById("markdown"));
}
```

js   
{: .fs-3 } 
```javascript
//js의 define 
//따라서, 아래의 코드에 (as-is)
 main.variable(observer()).define(["tipPercent", "amount", "tip", "md"], _4);
 //이름을 지어주고 (to-be)
main
    .variable(observer("viewof markdown"))
    .define(["tipPercent", "amount", "tip", "md"], _markdown);

```

```javascript
//js의 function 
//아래의 코드에(as-is)
function _4(tipPercent, amount, tip, md) {
  return md`A **${tipPercent}%** tip on **$${amount.toFixed(2)}** is **$${tip.toFixed(2)}**, 
  for a total of **$${(amount + tip).toFixed(2)}**`;
}

//이름을 지어준다 (to-be)
function _markdown(tipPercent, amount, tip, md) {
  return md`A **${tipPercent}%** tip on **$${amount.toFixed(2)}** is **$${tip.toFixed(2)}**, 
  for a total of **$${(amount + tip).toFixed(2)}**`;
}
```

필요없는 코드는 지우고, 원하는 코드는 모두 출력할 수 있다.   
![web_application4.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application4.png?raw=true)

---

## download codes from ObservableHQ
### 불필요한 코드 출력
{: .fs-3 }   
```
issue> 불필요한 부분까지 모두 출력된다.
```
![web_application21.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application21.png?raw=true)   
![web_application22.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application22.png?raw=true)       

fix > [runtime]("https://github.com/observablehq/runtime")을 참고하여 필요한 부분만 출력되도록 코드를 수정한다.   
{: .fs-3 }    
![web_application23.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application23.png?raw=true)   
![web_application24.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application24.png?raw=true)  


```
기본적인 구조는 다음과 같다.

html 상단에
<div id=”function_name”><div>

<body>의 runtime.module 안에
if (name === "viewof function_name") {
  return new Inspector(document.getElementById("function_name"));
}

if문이 이미 존재한다면, 
else if (name === "viewof function_name") {
  return new Inspector(document.getElementById("function_name"));
}
```
---

### 3개의 js 파일 export
{: .fs-3 }   
```
기존의 코드는 하나의 js 파일만 export할 수 있음. 세 개의 js 파일을 export해야됨.
as-is
//index.js
export {default} from "./5a9ffc9992b0449e@7454.js";
//index.html
import define from "./index.js";

to-be
//index.js 삭제
//index.html
import define from "./5a9ffc9992b0449e@7454.js";
import define from "./또 다른 js 파일"
```

---
### 동작을 위해서는 필요하지만, 출력이 필요없는 코드
{: .fs-3 }   
<br>
![web_application25.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application25.png?raw=true)  
```
동작하기 위해서는 필요하지만, 출력이 필요없는 코드가 있다. 
이 경우에는, css에서 함수의 display를 none으로 설정하면 출력되지 않도록 수정할 수 있다.

#mutableDataForMapUpdate {
  display: none;
}

#indexOfFormattedDates {
  display: none;
}
#colorChangeandTooltip {
  display: none;
}

#default_zoom_value {
  display: none;
}
```
![web_application26.png](https://github.com/Sujinkim-625/Sujinkim-625.github.io/blob/main/docs/1.nims/image/web_application26.png?raw=true) 